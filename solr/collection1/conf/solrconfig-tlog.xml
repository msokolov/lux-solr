<?xml version="1.0" ?>

<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<config>
  <!-- <jmx /> -->

  <luceneMatchVersion>${tests.luceneMatchVersion:LUCENE_CURRENT}</luceneMatchVersion>
  
  <directoryFactory name="DirectoryFactory" class="${solr.directoryFactory:solr.RAMDirectoryFactory}">
    <!-- used to keep RAM reqs down for HdfsDirectoryFactory -->
    <int name="solr.hdfs.blockcache.blocksperbank">${solr.hdfs.blockcache.blocksperbank:1024}</int>
  </directoryFactory>
  
  <dataDir>${solr.data.dir:}</dataDir>

  <indexConfig>
    <lockType>${solr.lock.type:native}</lockType>
  </indexConfig>

  <!-- an update processor the explicitly excludes distrib to test
       clean errors when people attempt atomic updates w/o it
  -->
  <updateRequestProcessorChain name="nodistrib" >
   <processor class="solr.NoOpDistributingUpdateProcessorFactory" />
   <processor class="solr.RunUpdateProcessorFactory" />
 </updateRequestProcessorChain>

  <requestHandler name="standard" class="solr.StandardRequestHandler">
  </requestHandler>

  <requestHandler name="/get" class="solr.RealTimeGetHandler">
    <lst name="defaults">
      <str name="omitHeader">true</str>
    </lst>
  </requestHandler>
  
  <requestHandler name="/replication" class="solr.ReplicationHandler" startup="lazy" /> 

  <requestHandler name="/update" class="solr.UpdateRequestHandler">
    <lst name="defaults">
      <str name="update.chain">lux-update-chain</str>
    </lst>                  
  </requestHandler>

  <updateHandler class="solr.DirectUpdateHandler2">
    <updateLog>
      <str name="dir">${solr.ulog.dir:}</str>
    </updateLog>
  </updateHandler>

  <queryParser name="xml" class="lux.solr.XmlQParserPlugin"/>

  <!--  Lux update processor
       Indexes the given named field as an XML document. Enables index-assisted XQuery/XPath evaluation using Lux.
  --> 
  <updateRequestProcessorChain name="lux-update-chain" default="true">
    <lst name="namespaces">
      <str name="wp">http://www.mediawiki.org/xml/export-0.8/</str>
    </lst>
    <lst name="fields">
      <!--  define additional fields using XPath-->
      <str name="title">
        /descendant::title[1],
        /descendant::wp:title[1],
        /SPEECH/LINE[1]
      </str>
      <str name="doctype_s">local-name(/*)</str>
    </lst>
    <lst name="fieldAliases">
      <str name="xmlFieldName">lux_xml</str>
      <str name="uriFieldName">lux_uri</str>
    </lst>
    <str name="strip-namespaces">no</str>
    <str name="xml-format">tiny</str>
    <!-- must come *before* the DistributingUpdateProcessor for lux_docid generation to work -->
    <processor class="lux.solr.CloudIdProcessorFactory" />
    <processor class="org.apache.solr.update.processor.DistributedUpdateProcessorFactory" />
    <!-- must come *after* the DistributingUpdateProcessor for transaction log replay to work -->
    <processor class="lux.solr.LuxUpdateProcessorFactory" />
    <processor class="solr.LogUpdateProcessorFactory" />
    <processor class="solr.RunUpdateProcessorFactory" />
  </updateRequestProcessorChain>

  <updateRequestProcessorChain name="dedupe">
    <processor class="org.apache.solr.update.processor.SignatureUpdateProcessorFactory">
      <bool name="enabled">true</bool>
      <bool name="overwriteDupes">true</bool>
      <str name="fields">v_t,t_field</str>
      <str name="signatureClass">org.apache.solr.update.processor.TextProfileSignature</str>
    </processor>
    <processor class="solr.RunUpdateProcessorFactory" />
  </updateRequestProcessorChain>

  <requestHandler name="/admin/" class="org.apache.solr.handler.admin.AdminHandlers" />

  <updateRequestProcessorChain name="distrib-dup-test-chain-explicit">
    <!-- explicit test using processors before and after distrib -->
    <processor class="solr.RegexReplaceProcessorFactory">
      <str name="fieldName">regex_dup_A_s</str>
      <str name="pattern">x</str>
      <str name="replacement">x_x</str>
    </processor>
    <processor class="solr.DistributedUpdateProcessorFactory" />
    <processor class="solr.RegexReplaceProcessorFactory">
      <str name="fieldName">regex_dup_B_s</str>
      <str name="pattern">x</str>
      <str name="replacement">x_x</str>
    </processor>
    <processor class="solr.RunUpdateProcessorFactory" />
  </updateRequestProcessorChain>  

  <updateRequestProcessorChain name="distrib-dup-test-chain-implicit">
    <!-- implicit test w/o distrib declared-->
    <processor class="solr.RegexReplaceProcessorFactory">
      <str name="fieldName">regex_dup_A_s</str>
      <str name="pattern">x</str>
      <str name="replacement">x_x</str>
    </processor>
    <processor class="solr.RegexReplaceProcessorFactory">
      <str name="fieldName">regex_dup_B_s</str>
      <str name="pattern">x</str>
      <str name="replacement">x_x</str>
    </processor>
    <processor class="solr.RunUpdateProcessorFactory" />
  </updateRequestProcessorChain>

  <!-- This component and handler provide a search-enabled xquery
       evaluation service.  Its query is taken from request parameter 'q',
       like other Solr search handlers, and results are returned using
       the usual Solr marshalling options (XML, javabin, json, etc)
  -->
  <searchComponent name="xquery" class="lux.solr.XQueryComponent" />
  
  <requestHandler name="/xquery" class="solr.SearchHandler" id="xquery">
    <arr name="components">
      <str>xquery</str>
      <str>stats</str>
      <str>debug</str>
      <!-- highlight? facet? -->
    </arr>
  </requestHandler>

</config>
